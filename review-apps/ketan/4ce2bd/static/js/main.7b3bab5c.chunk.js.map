{"version":3,"sources":["Square.js","Board.js","Game.js","App.js","reportWebVitals.js","index.js"],"names":["Square","props","className","winnerClass","onClick","value","Board","row","col","board","cellCounter","i","columns","j","push","this","renderSquare","winnerSquares","squares","createBoard","React","Component","calculateWinner","winPosibility","a","b","c","winnerRow","winner","initialState","history","Array","fill","reverseMove","currentStepNumber","currentLocation","xIsNext","Game","state","slice","length","setState","concat","stepNumber","step","status","current","moves","map","move","console","log","desc","classButton","jumpTo","reverse","handleClick","sortMoves","reset","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"iOAQeA,EANA,SAAAC,GAAK,OAClB,wBAAQC,UAAS,UAAKD,EAAME,YAAX,WAAiCC,QAASH,EAAMG,QAAjE,SACGH,EAAMI,SCyCIC,E,0KAzCDC,EAAKC,GAIf,IAHA,IAAMC,EAAQ,GACVC,EAAc,EAETC,EAAI,EAAGA,EAAIJ,EAAKI,GAAK,EAAG,CAE/B,IADA,IAAMC,EAAU,GACPC,EAAI,EAAGA,EAAIL,EAAKK,GAAK,EAC5BD,EAAQE,KAAKC,KAAKC,aAAaN,IAAcC,EAAE,EAAGE,EAAE,IAEtDJ,EAAMK,KAAK,qBAAaZ,UAAU,YAAvB,SAAoCU,GAA1BD,IAGvB,OAAOF,I,mCAGIE,EAAEJ,EAAKC,GAAM,IAAD,OAGjBL,GACJY,KAAKd,MAAMgB,eACVF,KAAKd,MAAMgB,cAAc,KAAON,GAC/BI,KAAKd,MAAMgB,cAAc,KAAON,GAChCI,KAAKd,MAAMgB,cAAc,KAAON,EAE9B,GADA,gBAGN,OACE,cAAC,EAAD,CACER,YAAaA,EAEbE,MAAOU,KAAKd,MAAMiB,QAAQP,GAC1BP,QAAS,kBAAM,EAAKH,MAAMG,QAAQO,EAAEJ,EAAKC,KAFpCG,K,+BAQT,OAAO,8BAAMI,KAAKI,YAAY,EAAG,S,GAtCjBC,IAAMC,WCApBC,EAAkB,SAACJ,GAavB,IAXA,IAAMK,EAAgB,CACpB,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAELZ,EAAI,EACR,MAAwBY,EAAxB,eAAuC,CAAC,IAAD,sBAA3BC,EAA2B,KAAxBC,EAAwB,KAArBC,EAAqB,KAI7BC,EAAYJ,EAAcZ,GAChC,GAAIO,EAAQM,IAAMN,EAAQM,KAAON,EAAQO,IAAMP,EAAQM,KAAON,EAAQQ,GAKlE,MAAO,CAAEE,OAAQV,EAAQM,GAAIG,UAAWA,GAE5ChB,IAGJ,MAAO,CAAEiB,OAAQ,KAAMD,UAAW,OAI9BE,EAAe,CACnBC,QAAS,CACP,CACEZ,QAASa,MAAM,GAAGC,KAAK,QAG3BC,aAAa,EACbC,kBAAmB,EACnBC,gBAAgB,GAChBC,SAAS,GA8HIC,E,kDA1Hb,WAAYpC,GAAQ,IAAD,8BACjB,cAAMA,IACDqC,MAAQT,EAFI,E,wDAMPlB,EAAGJ,EAAKC,GAGlB,IAAMsB,EAAUf,KAAKuB,MAAMR,QAAQS,MAAM,EAAGxB,KAAKuB,MAAMJ,kBAAoB,GAErEhB,EADUY,EAAQA,EAAQU,OAAS,GACjBtB,QAAQqB,QACjBjB,EAAgBJ,GAA1BU,QACSV,EAAQP,KAGtBO,EAAQP,GAAKI,KAAKuB,MAAMF,QAAU,IAAM,IAGxCrB,KAAK0B,SAAS,CACZX,QAASA,EAAQY,OAAO,CACtB,CACExB,QAASA,EACTyB,WAAYb,EAAQU,OACpBL,gBAAgB,QAAD,OAAU5B,EAAV,kBAAuBC,MAG1C0B,kBAAmBJ,EAAQU,OAC3BJ,SAAUrB,KAAKuB,MAAMF,a,6BAMlBQ,GAEL7B,KAAK0B,SAAS,CACZP,kBAAmBU,EACnBR,QAAUQ,EAAO,IAAO,M,kCAM1B7B,KAAK0B,SAAS,CACZR,aAAclB,KAAKuB,MAAML,gB,8BAM3BlB,KAAK0B,SAAS,CACZX,QAAS,CACP,CACEZ,QAASa,MAAM,GAAGC,KAAK,QAG3BE,kBAAmB,EACnBE,SAAS,M,+BAMH,IAyBJS,EAzBG,OAECf,EAAYf,KAAKuB,MAAjBR,QACFgB,EAAUhB,EAAQf,KAAKuB,MAAMJ,mBAH5B,EAIuBZ,EAAgBwB,EAAQ5B,SAA9CU,EAJD,EAICA,OAAQD,EAJT,EAISA,UAEVoB,EAAQjB,EAAQkB,KAAI,SAACJ,EAAMK,GAC/BC,QAAQC,IAAI,kBAAkBP,GAChC,IAAMT,EAAkBS,EAAKT,gBAAL,WAA2BS,EAAKT,gBAAhC,KAAqD,GACvEiB,EAAOR,EAAKD,WAAL,sBAAiCC,EAAKD,YAAe,mBAC5DU,EAAcJ,IAAS,EAAKX,MAAMJ,kBAAoB,gBAAkB,GAE5E,OACE,6BACE,wBAAQhC,UAAS,UAAKmD,EAAL,WAA2BjD,QAAS,kBAAM,EAAKkD,OAAOL,IAAvE,mBACMG,EADN,YACcjB,MAFPc,MAqBb,OAbIlC,KAAKuB,MAAML,aACbc,EAAMQ,UAKNV,EADEjB,EACI,iBAAaA,GACS,KAAnBE,EAAQU,OACR,oBAEH,uBAAmBzB,KAAKuB,MAAMF,QAAU,IAAM,KAIpD,sBAAKlC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAAC,EAAD,CACEgB,QAAS4B,EAAQ5B,QACjBD,cAAeU,EACfvB,QAAS,SAACO,EAAGJ,EAAKC,GAAT,OAAiB,EAAKgD,YAAY7C,EAAGJ,EAAKC,QAGvD,sBAAKN,UAAU,YAAf,UACE,8BAAM2C,IACN,wBAAQ3C,UAAU,SAASE,QAAS,kBAAM,EAAKqD,aAA/C,wBAGA,wBAAQvD,UAAU,0BAA0BE,QAAS,kBAAM,EAAKsD,SAAhE,sBAGA,6BAAKX,c,GApHI3B,IAAMC,WCrCVsC,MARf,WACE,OACE,qBAAKzD,UAAU,MAAf,SACE,cAAC,EAAD,OCOS0D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDZ,M","file":"static/js/main.7b3bab5c.chunk.js","sourcesContent":["import React from 'react';\n\nconst Square = props => (\n  <button className={`${props.winnerClass} square`} onClick={props.onClick}>\n    {props.value}\n  </button>\n);\n\nexport default Square;","import React from 'react';\nimport Square from './Square';\n\nclass Board extends React.Component {\n  createBoard(row, col) {\n    const board = [];\n    let cellCounter = 0;\n\n    for (let i = 0; i < row; i += 1) {\n      const columns = [];\n      for (let j = 0; j < col; j += 1) {\n        columns.push(this.renderSquare(cellCounter++,i+1, j+1));\n      }\n      board.push(<div key={i} className=\"board-row\">{columns}</div>);\n    }\n\n    return board;\n  }\n\n  renderSquare(i,row, col) {\n    //console.log('iiiiiii',i)\n    //console.log('this.props.winnerSquares',this.props.winnerSquares)\n    const winnerClass =\n      this.props.winnerSquares &&\n      (this.props.winnerSquares[0] === i ||\n        this.props.winnerSquares[1] === i ||\n        this.props.winnerSquares[2] === i)\n        ? 'square--green'\n        : '';\n\n    return (\n      <Square\n        winnerClass={winnerClass}\n        key={i}\n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i,row, col)}\n      />\n    );\n  }\n\n  render() {\n    return <div>{this.createBoard(3, 3)}</div>;\n  }\n}\n\nexport default Board;","import React from 'react';\nimport Board from './Board';\n\nconst calculateWinner = (squares) => {\n  // Operation\n  const winPosibility = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n];\n  let i = 0;\n  for (const [a, b, c] of winPosibility) {\n      // console.log('squares[a]',squares[a])\n      // console.log('squares[b]',squares[b])\n      // console.log('squares[c]',squares[c])\n      const winnerRow = winPosibility[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n          //return squares[a];\n        //   const winner = state.xIsNext ? '0' : 'X';\n        //  console.log('winner',winner)\n        //  console.log('winnerRow',squares)\n          return { winner: squares[a], winnerRow: winnerRow };\n      }\n      i++;\n  }\n\n  return { winner: null, winnerRow: null };\n  \n};\n\nconst initialState = {\n  history: [\n    {\n      squares: Array(9).fill(null),\n    },\n  ],\n  reverseMove: false,\n  currentStepNumber: 0,\n  currentLocation:'',\n  xIsNext: true,\n};\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n  }\n\n  \n  handleClick(i, row, col) {\n   \n    // Operation\n    const history = this.state.history.slice(0, this.state.currentStepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    let {winner} = calculateWinner(squares);\n    if (winner || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n    //squares[i].currentLocation = `Row: ${row}, Col: ${col}`;\n\n    this.setState({\n      history: history.concat([\n        {\n          squares: squares,\n          stepNumber: history.length,\n          currentLocation: `Row: ${row}, Col: ${col}`,\n        }\n      ]),\n      currentStepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n \n\n  jumpTo(step) {\n    // Operation\n    this.setState({\n      currentStepNumber: step,\n      xIsNext: (step % 2) === 0\n    });\n  }\n\n  sortMoves() {\n    // Operation\n    this.setState({\n      reverseMove: !this.state.reverseMove\n    });\n  }\n\n  reset() {\n    // Operation\n    this.setState({\n      history: [\n        {\n          squares: Array(9).fill(null),\n        },\n      ],\n      currentStepNumber: 0,\n      xIsNext: true,\n    });\n  }\n\n\n\n  render() {\n    \n    const { history } = this.state;\n    const current = history[this.state.currentStepNumber];\n    const { winner, winnerRow } = calculateWinner(current.squares);\n    \n    const moves = history.map((step, move) => {\n      console.log('currentLocation',step)\n    const currentLocation = step.currentLocation ? `(${step.currentLocation})` : '';\n    const desc = step.stepNumber ? `Go to move #${step.stepNumber}` : 'Go to game start';\n    const classButton = move === this.state.currentStepNumber ? 'button--green' : '';\n\n      return (\n        <li key={move}>\n          <button className={`${classButton} button`} onClick={() => this.jumpTo(move)}>\n            {`${desc} ${currentLocation}`}\n          </button>\n        </li>\n      );\n    });\n\n    if (this.state.reverseMove) {\n      moves.reverse();\n    }\n\n    let status;\n    if (winner) {\n      status = `Winner ${winner}`;\n    } else if (history.length === 10) {\n      status = 'Draw. No one won.';\n    } else {\n      status = `Next player: ${this.state.xIsNext ? 'X' : 'O'}`;\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            winnerSquares={winnerRow}\n            onClick={(i, row, col) => this.handleClick(i, row, col)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <button className=\"button\" onClick={() => this.sortMoves()}>\n            Sort moves\n          </button>\n          <button className=\"button button--new-game\" onClick={() => this.reset()}>\n            New game\n          </button>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Game;","import './App.css';\nimport Game from './Game'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}